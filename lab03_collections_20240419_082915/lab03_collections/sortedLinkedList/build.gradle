
plugins {
  id 'distribution'
  id 'eclipse'
  id 'idea'
  id 'java-library'
}

defaultTasks 'clean', 'compileJava', 'compileTestJava', 'test'

apply from: "${rootDir}/../configurations/configurations.gradle"

repositories {
  maven {
    name = 'mavenLib'
    url = localMavenRepository.toURI().toURL()
  }
  mavenLocal()
  mavenCentral()
}

dependencies {
  // unit test
  testImplementation "org.junit.jupiter:junit-jupiter:${junitVersion}"
  testImplementation "org.junit.jupiter:junit-jupiter-params:${junitVersion}"
  testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

  // logging
  testRuntimeOnly "org.apache.logging.log4j:log4j-core:${log4jVersion}"
  testRuntimeOnly "org.apache.logging.log4j:log4j-jul:${log4jVersion}"
}

sourceCompatibility = JavaVersion.toVersion(jdkVersion)
targetCompatibility = JavaVersion.toVersion(jdkVersion)

test {
  testLogging {
    outputs.upToDateWhen { false }
    showStandardStreams = true
  }

  useJUnitPlatform {
    includeEngines 'junit-jupiter'
  }

  beforeTest { descriptor ->
    logger.lifecycle("Run test: " + descriptor)
  }

  // Fail the 'test' task on the first test failure
  failFast = true

  // // listen to standard out and standard error of the test JVM(s)
  // onOutput { descriptor, event ->
  //   logger.lifecycle( event.message.trim() )
  // }

  maxHeapSize = '1G'

  testLogging {
    events "passed"
  }
}

